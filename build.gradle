buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

import org.apache.tools.ant.filters.ReplaceTokens

allprojects {
    apply plugin: 'java'
}

task clean_dist_folder(type: Delete){
    delete "${rootDir}/dist"
}

subprojects {
    apply plugin: 'idea'
    apply plugin: 'forge'

    minecraft {
        version = "1.7.10-10.13.4.1614-1.7.10"
    }

    group = 'io.github.crucible'
    version = '1.0.1a'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    compileJava.options.encoding = 'UTF-8'

    repositories {
        maven {
            name = 'spongepowered-repo'
            url = 'https://repo.spongepowered.org/maven/'
        }
        maven { url 'https://jitpack.io' }
        mavenCentral()
    }

    dependencies {
        implementation("com.github.CrucibleMC:Grimoire-legacy:legacy-1.7.10-SNAPSHOT")
        compile "org.spongepowered:mixin:0.7.11-SNAPSHOT"
        compileOnly 'org.jetbrains:annotations:16.0.2'
        compileOnly fileTree(dir: 'libs', include: ['*.jar'])
    }

    ext {
        mixinSrg = new File(project.buildDir, 'mixins/mixin.grimoire.srg')
        mixinRefMapName = name.toLowerCase() + ".refmap.json"; //Sub-Project Name
        mixinRefMap = new File(project.buildDir, "mixins/" + mixinRefMapName)
    }

    jar {
        from project.mixinRefMap
    }

    reobf {
        addExtraSrgFile project.mixinSrg
    }

    compileJava {
        options.compilerArgs += [
                '-Xlint:-processing',
                "-AoutSrgFile=${project.mixinSrg.canonicalPath}",
                "-AoutRefMapFile=${project.mixinRefMap.canonicalPath}",
                "-AreobfSrgFile=${project.file('build/srgs/mcp-srg.srg').canonicalPath}"
        ]
    }

    processResources{
        eachFile{
            filter ReplaceTokens, tokens:[MIXIN_REFMAP_NAME: mixinRefMapName]
        }
    }

    task copySrgs(type: Copy, dependsOn: 'genSrgs') {
        from plugins.getPlugin("forge").delayedFile('{SRG_DIR}')

        include '**/*.srg'
        into 'build/srgs'
    }

    compileJava.dependsOn copySrgs

    task build_them_all {
        dependsOn clean_dist_folder
        dependsOn build
        doLast {
            def baseName = project.archivesBaseName
            def version = project.version
            def group = project.group
            def DIST_DIR = "${rootDir}/dist"
            def SRC_DIR = "${buildDir}/libs"

            ant.mkdir(dir: DIST_DIR)
            ant.copy(todir: DIST_DIR) {
                fileset(dir: SRC_DIR,
                        includes: "${baseName}*${version}*.jar,${baseName}*${version}*.jar")
            }
        }
    }

    //Intelij IDEAL has a "BUG" that hides
    // theses functions bellow from the
    // subprojects gradle. Altering them
    // make them reapear

    tasks.build.doFirst {
        println "Grimoire BuildProject"
    }

    tasks.clean.doFirst {
        println "Grimoire CleanProject!"
    }
}

